/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI_Register;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Enterprise.VoluntaryTeamER;
import Business.Position;
import Business.Network.Network;
import Business.Organization.CompanyOrganization;
import Business.Organization.HospitalOrganization;
import Business.Organization.PersonalOrganization;
import Business.Organization.NGOOrganization;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Organization.OrganizationDirectory;
import Business.Register.RegistrationRequest;
import Business.WorkQueue.WorkQueue;
import Business.WorkQueue.WorkRequest;
import UI_GoogleMap.Organization_Postion_Panel;
import Validations.Validator;
import java.awt.CardLayout;
import javax.mail.SendFailedException;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author purva
 */
public class Register_Panel extends javax.swing.JPanel {

    /**
     * Creates new form Register_Panel
     */
    private JPanel userProcessContainer;
    private OrganizationDirectory organizationDirectory;
    private Enterprise enterprise;
    private Network network;
    private EcoSystem system;
    private Position position;

    public Register_Panel(JPanel userProcessContainer, EcoSystem business) {
        initComponents();
        this.system = business;
        this.userProcessContainer = userProcessContainer;
        populateComboBox();
        populateCarrierComboBox();

    }

    public void populateLatLong(Position position) {
        this.position = position;
        latLongTextField.setText(position.getLatitude() + "," + position.getLongitude());
    }

    public void populateComboBox() {
        comboState.removeAllItems();
        for (Network network : system.getNetworkList()) {
            comboState.addItem(network);

        }
    }

    public void populateCarrierComboBox() {
        carrierComboBox.removeAllItems();
        carrierComboBox.addItem("ATT");
        carrierComboBox.addItem("Sprint");
        carrierComboBox.addItem("TMobile");
        carrierComboBox.addItem("Verizon");
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel6 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        txtName = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        txtUserName = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        txtPassword = new javax.swing.JPasswordField();
        jLabel8 = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        comboState = new javax.swing.JComboBox();
        jLabel10 = new javax.swing.JLabel();
        txtCity = new javax.swing.JTextField();
        jLabel12 = new javax.swing.JLabel();
        comboOrganization = new javax.swing.JComboBox();
        btnCreate = new javax.swing.JButton();
        jLabel14 = new javax.swing.JLabel();
        lblUserName = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        contactNumberTextField = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        carrierComboBox = new javax.swing.JComboBox<String>();
        jLabel4 = new javax.swing.JLabel();
        latLongTextField = new javax.swing.JTextField();
        locationBtn = new javax.swing.JButton();
        lblAcceptedUserName = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel6.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(102, 0, 102));
        jLabel6.setText("Volunteer Registration Panel");
        add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 20, 353, 30));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 102));
        jLabel3.setText("Name :");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 80, -1, -1));

        txtName.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        txtName.setForeground(new java.awt.Color(102, 0, 102));
        txtName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtNameFocusLost(evt);
            }
        });
        txtName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNameActionPerformed(evt);
            }
        });
        txtName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtNameKeyPressed(evt);
            }
        });
        add(txtName, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 80, 170, -1));

        jLabel5.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(102, 0, 102));
        jLabel5.setText("User Name:");
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 110, -1, -1));

        txtUserName.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        txtUserName.setForeground(new java.awt.Color(102, 0, 102));
        txtUserName.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtUserNameFocusLost(evt);
            }
        });
        txtUserName.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtUserNameKeyPressed(evt);
            }
        });
        add(txtUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 110, 170, -1));

        jLabel7.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel7.setForeground(new java.awt.Color(102, 0, 102));
        jLabel7.setText("Password:");
        add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, -1, -1));

        txtPassword.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        txtPassword.setForeground(new java.awt.Color(102, 0, 102));
        txtPassword.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtPasswordFocusLost(evt);
            }
        });
        add(txtPassword, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 140, 170, -1));

        jLabel8.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(102, 0, 102));
        jLabel8.setText("Email Id:");
        add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 170, -1, -1));

        txtEmail.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        txtEmail.setForeground(new java.awt.Color(102, 0, 102));
        txtEmail.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtEmailFocusLost(evt);
            }
        });
        txtEmail.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtEmailKeyPressed(evt);
            }
        });
        add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 170, 170, -1));

        comboState.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        comboState.setForeground(new java.awt.Color(102, 0, 102));
        comboState.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comboStateActionPerformed(evt);
            }
        });
        add(comboState, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 200, 170, -1));

        jLabel10.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel10.setForeground(new java.awt.Color(102, 0, 102));
        jLabel10.setText("City:");
        add(jLabel10, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 230, -1, -1));

        txtCity.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        txtCity.setForeground(new java.awt.Color(102, 0, 102));
        txtCity.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                txtCityFocusLost(evt);
            }
        });
        txtCity.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                txtCityKeyPressed(evt);
            }
        });
        add(txtCity, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 230, 170, -1));

        jLabel12.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(102, 0, 102));
        jLabel12.setText("Organization Type :");
        add(jLabel12, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 270, -1, -1));

        comboOrganization.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        comboOrganization.setForeground(new java.awt.Color(102, 0, 102));
        add(comboOrganization, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 270, 170, -1));

        btnCreate.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        btnCreate.setForeground(new java.awt.Color(102, 0, 102));
        btnCreate.setText("Register");
        btnCreate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCreateActionPerformed(evt);
            }
        });
        add(btnCreate, new org.netbeans.lib.awtextra.AbsoluteConstraints(470, 400, 90, -1));

        jLabel14.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel14.setForeground(new java.awt.Color(102, 0, 102));
        jLabel14.setText("State:");
        add(jLabel14, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 200, -1, -1));
        add(lblUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(559, 107, -1, -1));

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setText("Contact Number:");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 300, -1, -1));

        contactNumberTextField.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        contactNumberTextField.setForeground(new java.awt.Color(102, 0, 102));
        contactNumberTextField.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                contactNumberTextFieldFocusLost(evt);
            }
        });
        contactNumberTextField.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                contactNumberTextFieldKeyPressed(evt);
            }
        });
        add(contactNumberTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 300, 170, -1));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setText("Carrier:");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 330, -1, 20));

        carrierComboBox.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        carrierComboBox.setForeground(new java.awt.Color(102, 0, 102));
        add(carrierComboBox, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 330, 170, -1));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 102));
        jLabel4.setText("Set Location:");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 370, -1, -1));

        latLongTextField.setEditable(false);
        latLongTextField.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        latLongTextField.setForeground(new java.awt.Color(102, 0, 102));
        add(latLongTextField, new org.netbeans.lib.awtextra.AbsoluteConstraints(390, 360, 170, -1));

        locationBtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        locationBtn.setForeground(new java.awt.Color(102, 0, 102));
        locationBtn.setText("Set Location");
        locationBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                locationBtnActionPerformed(evt);
            }
        });
        add(locationBtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(600, 370, -1, -1));
        add(lblAcceptedUserName, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 100, -1, -1));

        jLabel9.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/icons/imagesL4OASZEI.png"))); // NOI18N
        add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void txtNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNameActionPerformed

    private void txtNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNameKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtNameKeyPressed

    private void txtUserNameKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtUserNameKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtUserNameKeyPressed

    private void txtEmailKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtEmailKeyPressed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtEmailKeyPressed

    private void comboStateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comboStateActionPerformed
        // TODO add your handling code here:
        Network n = (Network) comboState.getSelectedItem();
        for (Enterprise e : n.getEnterpriseDirectory().getEnterpriseList()) {
            for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                if (o instanceof CompanyOrganization) {
                    comboOrganization.addItem(Type.Company);
                } else if (o instanceof NGOOrganization) {
                    comboOrganization.addItem(Type.NGO);
                } else if (o instanceof PersonalOrganization) {
                    comboOrganization.addItem(Type.Personal);
                } else if (o instanceof HospitalOrganization) {
                    comboOrganization.addItem(Type.Hospital);

                }
            }
        }
    }//GEN-LAST:event_comboStateActionPerformed

    private void txtCityKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtCityKeyPressed
        // TODO add your handling code here:

    }//GEN-LAST:event_txtCityKeyPressed

    private void btnCreateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCreateActionPerformed
        // TODO add your handling code here:

        try {
            if (!txtUserName.getText().isEmpty() && !txtName.getText().isEmpty() && !txtCity.getText().isEmpty() && !txtPassword.getText().isEmpty()) {
                Network network = (Network) comboState.getSelectedItem();
                String username = txtUserName.getText();
                Organization.Type type = (Type) comboOrganization.getSelectedItem();
                try {
                    Validator.sendMessage(txtEmail.getText());
                } catch (SendFailedException ex) {
                    JOptionPane.showMessageDialog(null, "Email Id Not Valid");
                    return;
                    }
                try {
                    if (!system.checkIfUsernameIsUnique(username)) {
                        JOptionPane.showMessageDialog(null, "Enter a unique username", "Warning", JOptionPane.WARNING_MESSAGE);
                        return;
                    }
                } catch (Exception e) {

                }
                try {
                    for (Enterprise ent : network.getEnterpriseDirectory().getEnterpriseList()) {
                        if (ent instanceof VoluntaryTeamER) {
                            for (WorkRequest workReq : ent.getWorkQueue().getWorkRequestList()) {
                                if (workReq instanceof RegistrationRequest) {
                                    if (txtEmail.getText().equals(((RegistrationRequest) workReq).getEmailId())) {
                                        JOptionPane.showMessageDialog(null, "Enter a unique email ID. Email already exists", "Warning", JOptionPane.WARNING_MESSAGE);
                                        return;
                                    }
                                }
                            }
                        }
                    }
                } catch (Exception e) {

                }
                RegistrationRequest organizationRequest = new RegistrationRequest();
                organizationRequest.setName(txtName.getText());
                organizationRequest.setUserName(txtUserName.getText());
                organizationRequest.setPassword(txtPassword.getText());
                organizationRequest.setEmailId(txtEmail.getText());
                organizationRequest.setNetwork(network);
                organizationRequest.setCity(txtCity.getText());
                organizationRequest.setOrgType(type);
                organizationRequest.setStatus("Requested");
                organizationRequest.setContactNo(contactNumberTextField.getText());
                organizationRequest.setPosition(position);

                String contact = "";
                if (carrierComboBox.getSelectedItem().equals("ATT")) {
                    contact = contactNumberTextField.getText() + "@txt.att.net";
                } else if (carrierComboBox.getSelectedItem().equals("Verizon")) {
                    contact = contactNumberTextField.getText() + "@vmobl.com";
                } else if (carrierComboBox.getSelectedItem().equals("Sprint")) {
                    contact = contactNumberTextField.getText() + "@messaging.sprintpcs.com";
                } else if (carrierComboBox.getSelectedItem().equals("TMobile")) {
                    contact = contactNumberTextField.getText() + "@tmomail.net";
                }
                Validator.sendMessageText(contact); 
                for (Network network1 : system.getNetworkList()) {
                    for (Enterprise enterprise : network1.getEnterpriseDirectory().getEnterpriseList()) {
                        System.out.println("ent type" + enterprise.getEnterpriseType().getValue());
                        if (enterprise.getEnterpriseType() == Enterprise.EnterpriseType.VoluntaryTeam) {
                            if (enterprise.getWorkQueue() == null) {
                                enterprise.setWorkQueue(new WorkQueue());
                            }
                            System.out.println("sendng req");
                            enterprise.getWorkQueue().getWorkRequestList().add(organizationRequest);
                        }
                    }

                }

                JOptionPane.showMessageDialog(null, "Registration succesfull. Your account will be available in 24 hrs");
            } else {
                JOptionPane.showMessageDialog(null, "Please enter all values");
            }
        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(null, "Enter integer for Salary", "Warning", JOptionPane.WARNING_MESSAGE);
        } catch (Exception ex) {
            ex.printStackTrace();
            JOptionPane.showMessageDialog(null, "Sorry for the inconvinence. Technical team is working on it", "Warning", JOptionPane.WARNING_MESSAGE);
        }
    }//GEN-LAST:event_btnCreateActionPerformed

    private void txtNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtNameFocusLost
        // TODO add your handling code here:
        if (!txtName.getText().isEmpty()) {
            if (!Validator.validateName(txtName.getText())) {
                JOptionPane.showMessageDialog(null, "*Only Alphabets and Spaces are allowed");
                txtName.setText("");
            }
        }

    }//GEN-LAST:event_txtNameFocusLost

    private void locationBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_locationBtnActionPerformed
        // TODO add your handling code here:
        Organization_Postion_Panel muajp = new Organization_Postion_Panel(userProcessContainer);
        userProcessContainer.add("Scene_Location", muajp);
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.next(userProcessContainer);
    }//GEN-LAST:event_locationBtnActionPerformed

    private void contactNumberTextFieldKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_contactNumberTextFieldKeyPressed
        // TODO add your handling code here:
        Validator.onlyInteger(evt, contactNumberTextField);
    }//GEN-LAST:event_contactNumberTextFieldKeyPressed

    private void txtPasswordFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtPasswordFocusLost
        // TODO add your handling code here:
        String password = String.valueOf(txtPassword.getPassword());
        if (!password.isEmpty()) {
            if (!Validator.validatePassword(password)) {
                JOptionPane.showMessageDialog(null, "Password should Contain \n"
                        + "       # At least one digit\n"
                        + "       # At least one lower case letter\n"
                        + "       # At least one upper case letter\n"
                        + "       # At least one special character(!@#$%^&+=~|?)\n"
                        + "       # no whitespace allowed in the entire string\n"
                        + "       # at least eight characters");
                txtPassword.setText("");
            }
        }
    }//GEN-LAST:event_txtPasswordFocusLost

    private void txtUserNameFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtUserNameFocusLost
        // TODO add your handling code here:
        String userName = txtUserName.getText();
        if (!txtUserName.getText().isEmpty()) {
            if (!Validator.validateUserName(txtUserName.getText())) {
                lblAcceptedUserName.setText("");
                lblUserName.setText("*Only AlphaNumeric Characters and Spaces are allowed");
                txtUserName.setText("");
            } else if (!EcoSystem.checkIfUsernameIsUnique(txtUserName.getText())) {
                lblUserName.setText("*" + userName + " " + "is already taken please enter new username");
                txtUserName.setText("");
            } else {
                lblUserName.setText("");
                lblAcceptedUserName.setText(userName + " " + "is available");
            }
        }
    }//GEN-LAST:event_txtUserNameFocusLost

    private void txtCityFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtCityFocusLost
        // TODO add your handling code here:
        if (!txtCity.getText().isEmpty()) {
            if (!Validator.validateName(txtCity.getText())) {
                JOptionPane.showMessageDialog(null, "*Only Alphabets and Spaces are allowed");
                txtCity.setText("");
            }
        }
    }//GEN-LAST:event_txtCityFocusLost

    private void txtEmailFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_txtEmailFocusLost
        // TODO add your handling code here:
        if (!txtEmail.getText().isEmpty()) {
            if (!Validator.validateEmail(txtEmail.getText())) {
                JOptionPane.showMessageDialog(null, "*Enter a Valid Email");
                txtEmail.setText("");
            }
        }
    }//GEN-LAST:event_txtEmailFocusLost

    private void contactNumberTextFieldFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_contactNumberTextFieldFocusLost
        // TODO add your handling code here:
        if (!contactNumberTextField.getText().isEmpty()) {
            if (!Validator.validatePhonenumber(contactNumberTextField.getText())) {
                JOptionPane.showMessageDialog(null, "*Enter a Valid Number");
                contactNumberTextField.setText("");
            }
        }
    }//GEN-LAST:event_contactNumberTextFieldFocusLost

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnCreate;
    private javax.swing.JComboBox<String> carrierComboBox;
    private javax.swing.JComboBox comboOrganization;
    private javax.swing.JComboBox comboState;
    private javax.swing.JTextField contactNumberTextField;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JTextField latLongTextField;
    private javax.swing.JLabel lblAcceptedUserName;
    private javax.swing.JLabel lblUserName;
    private javax.swing.JButton locationBtn;
    private javax.swing.JTextField txtCity;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtName;
    private javax.swing.JPasswordField txtPassword;
    private javax.swing.JTextField txtUserName;
    // End of variables declaration//GEN-END:variables
}
