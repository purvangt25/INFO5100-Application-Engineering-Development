/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package UI_Scene_Management;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.FiresafetyOrganization;
import Business.Organization.MedicalOrganization;
import Business.Organization.Organization;
import Business.Organization.Organization.Type;
import Business.Organization.PoliceOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.Emergency;
import java.awt.CardLayout;
import java.awt.Component;
import javax.swing.JOptionPane;
import javax.swing.JPanel;

/**
 *
 * @author shash
 */
public class Scene_ManagerPanel_workArea extends javax.swing.JPanel {

    JPanel userProcessContainer;
    UserAccount account;
    Enterprise enterprise;
    Network network;
    EcoSystem business;

    /**
     * Creates new form SceneManagerWorkAreaJPanel
     */
    Scene_ManagerPanel_workArea(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, Network network, EcoSystem business) {
        initComponents();
        this.userProcessContainer = userProcessContainer;
        this.account = account;
        this.enterprise = enterprise;
        this.network = network;
        this.business = business;
        populateCombo();

    }

    private void populateCombo() {
        requestorganizationcombobox.removeAllItems();
        //for (Type type : Organization.Type.values()){
        //  if (!type.getValue().equals(Type.CDCManager.getValue()))
        requestorganizationcombobox.addItem(Type.FireSafety);
        requestorganizationcombobox.addItem(Type.Police);
        requestorganizationcombobox.addItem(Type.Medicines);
        //}
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        requestorganizationcombobox = new javax.swing.JComboBox();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        quantitytxt = new javax.swing.JTextField();
        requestbtn = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        requesttypetxt = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();

        setBackground(new java.awt.Color(255, 255, 255));
        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("SansSerif", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(102, 0, 102));
        jLabel1.setText("SCENE MANAGER WORK AREA PANEL");
        add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(130, 70, 470, -1));

        jLabel2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(102, 0, 102));
        jLabel2.setText("REQUEST ORGANIZATION");
        add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 150, -1, -1));

        requestorganizationcombobox.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        requestorganizationcombobox.setForeground(new java.awt.Color(102, 0, 102));
        requestorganizationcombobox.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        requestorganizationcombobox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestorganizationcomboboxActionPerformed(evt);
            }
        });
        add(requestorganizationcombobox, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 149, -1, -1));

        jLabel3.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(102, 0, 102));
        jLabel3.setText("REQUEST TYPE");
        add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 210, -1, -1));

        jLabel4.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(102, 0, 102));
        jLabel4.setText("QUANTITY");
        add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 256, -1, 30));

        quantitytxt.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        quantitytxt.setForeground(new java.awt.Color(102, 0, 102));
        quantitytxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                quantitytxtActionPerformed(evt);
            }
        });
        add(quantitytxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 260, 62, -1));

        requestbtn.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        requestbtn.setForeground(new java.awt.Color(102, 0, 102));
        requestbtn.setText("REQUEST");
        requestbtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requestbtnActionPerformed(evt);
            }
        });
        add(requestbtn, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 320, -1, -1));

        jButton2.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        jButton2.setForeground(new java.awt.Color(102, 0, 102));
        jButton2.setText("<< Back");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(200, 320, -1, -1));

        requesttypetxt.setFont(new java.awt.Font("SansSerif", 1, 12)); // NOI18N
        requesttypetxt.setForeground(new java.awt.Color(102, 0, 102));
        requesttypetxt.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                requesttypetxtActionPerformed(evt);
            }
        });
        add(requesttypetxt, new org.netbeans.lib.awtextra.AbsoluteConstraints(451, 208, 62, -1));

        jLabel5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/UserInterface/icons/untitled.png"))); // NOI18N
        add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(60, 0, -1, -1));
    }// </editor-fold>//GEN-END:initComponents

    private void quantitytxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_quantitytxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_quantitytxtActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        userProcessContainer.remove(this);
        Component[] componentArray = userProcessContainer.getComponents();
        Component component = componentArray[componentArray.length - 1];
        Scene_ManagePanel manageAccountJPanel = (Scene_ManagePanel) component;
        manageAccountJPanel.populateWorkQueueTableResource();
        manageAccountJPanel.populateWorkQueueTableEmergency();
        CardLayout layout = (CardLayout) userProcessContainer.getLayout();
        layout.previous(userProcessContainer);
    }//GEN-LAST:event_jButton2ActionPerformed

    private void requesttypetxtActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requesttypetxtActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_requesttypetxtActionPerformed

    private void requestorganizationcomboboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestorganizationcomboboxActionPerformed

    }//GEN-LAST:event_requestorganizationcomboboxActionPerformed

    private void requestbtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_requestbtnActionPerformed
        Type type = (Type) requestorganizationcombobox.getSelectedItem();

        Emergency site = new Emergency();
        site.setStatus("Requested");
        site.setRequestOrg(type.getValue());
        site.setSender(account);
        site.setReqType(requesttypetxt.getText());
        site.setQty(Integer.parseInt(quantitytxt.getText()));
        site.setRemainingQuantity(Integer.parseInt(quantitytxt.getText()));
        account.getWorkQueue().getWorkRequestList().add(site);

        if (type == Organization.Type.Police) {
            for (Network net : business.getNetworkList()) {
                for (Enterprise e : net.getEnterpriseDirectory().getEnterpriseList()) {
                    for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                        if (o instanceof PoliceOrganization) {
                            o.getWorkQueue().getWorkRequestList().add(site);
                        }

                    }
                }
            }
        } else if (type == Organization.Type.Medicines) {
            for (Network net : business.getNetworkList()) {
                for (Enterprise e : net.getEnterpriseDirectory().getEnterpriseList()) {
                    for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                        if (o instanceof MedicalOrganization) {
                            o.getWorkQueue().getWorkRequestList().add(site);
                        }
                    }
                }
            }
        } else if (type == Organization.Type.FireSafety) {
            for (Network net : business.getNetworkList()) {
                for (Enterprise e : net.getEnterpriseDirectory().getEnterpriseList()) {
                    for (Organization o : e.getOrganizationDirectory().getOrganizationList()) {
                        if (o instanceof FiresafetyOrganization) {
                            o.getWorkQueue().getWorkRequestList().add(site);
                        }
                    }
                }
            }
        }

        JOptionPane.showMessageDialog(null, "Request Successfully Created");
    }//GEN-LAST:event_requestbtnActionPerformed

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JTextField quantitytxt;
    private javax.swing.JButton requestbtn;
    private javax.swing.JComboBox requestorganizationcombobox;
    private javax.swing.JTextField requesttypetxt;
    // End of variables declaration//GEN-END:variables
}
